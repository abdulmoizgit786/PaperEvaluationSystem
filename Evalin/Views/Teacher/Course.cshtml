@model Evalin.Models.CourseDetail

@{
    if (Request.IsAjaxRequest())
    {
        Layout = ""; 
  
    }
    else
    {Layout = "~/Views/Shared/TeacherMasterPage.cshtml";}
}


@section Scripts
{

<script type="text/javascript">

 
    $(document).ready(function () {

        $('#EnrolledStudents').DataTable();

        $('#EnrolledStudents_wrapper').css('width', '100%');

        $(document).click(function () {

            $("#Courses .dropdown-content").hide();
        });

        $(".dropbtn").click(function (e) {
            $("#Courses .dropdown-content").hide();
            $(this).parent().children(".dropdown-content").toggle();
            e.stopPropagation();
        });


        $('.panel-collapse').on('show.bs.collapse', function () {
            $(this).siblings('.panel-heading').addClass('active');
        });

        $('.panel-collapse').on('hide.bs.collapse', function () {
            $(this).siblings('.panel-heading').removeClass('active');
        });

      
    });
    
</script>   

}


<script type="text/javascript">

   
    $(document).ready(function () {

        $('#EnrolledStudents').DataTable();

        $('#EnrolledStudents_wrapper').css('width','100%');

        $(document).click(function () {

            $("#Courses .dropdown-content").hide();
        });

        $(".dropbtn").click(function (e) {
            $("#Courses .dropdown-content").hide();
            $(this).parent().children(".dropdown-content").toggle();
            e.stopPropagation();
        });


        $('.panel-collapse').on('show.bs.collapse', function () {
            $(this).siblings('.panel-heading').addClass('active');
        });

        $('.panel-collapse').on('hide.bs.collapse', function () {
            $(this).siblings('.panel-heading').removeClass('active');
        });

   



    });

</script>



<div id="Success" class="modal fade show" aria-modal="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #6c757d; color: white; height:50px; border-radius:0px; font-weight:500">Warning</div>
            <div class="modal-body">Sucessfully! Saved the Exam</div>
            <div class="modal-footer" style="border:0px white;">
                <button class="btn btn-secondary boot4cancel" data-dismiss="modal" type="button" onclick="document.getElementById('Disable').style.display='none';document.getElementById('loader').style.display='none';document.getElementById('Success').style.display='none';">Back to Builder</button>
                <button class="btn btn-primary boot4ok" id="btnview" data-dismiss="modal" type="button" onclick="CallView()">View</button>
            </div>
        </div>
    </div>
</div>


<div id="Failure" class="modal fade show" aria-modal="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #ff0000; color: white; height:50px; border-radius:0px; font-weight:500">Warning</div>
            <div id="Failure_body" class="modal-body"></div>
            <div class="modal-footer" style="border:0px white;">
                <button class="btn btn-danger boot4cancel" data-dismiss="modal" type="button" onclick=" document.getElementById('Failure').style.display = 'none';  document.getElementById('loader').style.display = 'block';">Delete</button>
                <button class="btn boot4ok" data-dismiss="modal" type="button" onclick="document.getElementById('Disable').style.display='none'; document.getElementById('Failure').style.display='none'">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="Disable" class="modal-backdrop fade show" style="display:none;"></div>
<div id="loader" style="display:none;"></div>



<div class="content" >

    <div class="container-fluid">
        <div style="margin-bottom:5px; text-align:right;" id="Courses">
            <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" style="background-color: #28a745; color:white; border:1px solid #28a745; border-radius:5px;">
                More Actions
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu">
                <li class="dropdown-header">Shortcuts</li>
                <li><a  onclick="CallAjax('NewCourse','Teacher','Get');">New Course</a></li>
                <li><a onclick="AddExam(@Model.Course.Course_Id.ToString())">Add Exam</a></li>
                <li class="divider"></li>
                <li class="dropdown-header">Course Actions</li>
                <li><a onclick="CallAjax('NewCourse','Teacher','Get');">Update</a></li>
                <li><a class="red" onclick="DeleteCourse(@Model.Course.Course_Id)">Delete</a></li>
            </ul>
        </div>   
        




        <div class="card card-success">
            <div class="card-header HeadingPanel">
                <h3 class="card-title">Course Details</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i></button>

                </div>

            </div>

            <div class="card-body panel-body panel-description" id="Courses">


                <table>
                    <tr>
                        <td class="Heading">Course Title </td>
                        <td>@Model.Course.Name</td>

                        <td class="Heading">Course Strength</td>


                        <td>@(Model.Students != null ? Model.Students.Count().ToString() : "0")</td>

                    </tr>
                    <tr>
                        <td class="Heading">Course Created Date </td>
                        <td>@DateTime.Parse(@Model.Course.Date).ToString("dd-MMM-yyyy")</td>

                        <td class="Heading">Course Enroll ID</td>
                        <td>@Model.Course.Enroll_id</td>

                    </tr>
                    <tr>
                        <td class="Heading">Course Status</td>
                        <td>@Model.Course.Status</td>

                        <td class="Heading">Course Enroll Password</td>
                        <td>
                            <span id="ep_hidden">***********</span>
                            <span id="ep_shown" style="display:none;"> @Model.Course.Enroll_Password </span>
                            <i class="fa fa-eye-slash" id="enroll_pass" style="float:right" onclick="TooglePassword(this);"></i>
                        </td>

                    </tr>

                </table>


            </div>

        </div>







        <div class="card card-success">
            <div class="card-header HeadingPanel">
                <h3 class="card-title">Course Exams</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i></button>
                </div>

            </div>

            <div class="card-body">


                <div class="row" id="Courses">

                    @if (Model.Course.exam != null && Model.Course.exam.Count() > 0)
                    {
                        for (int i = 0; i < Model.Course.exam.Count(); i++)
                        {
                            <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
                                <div class="card card-stats">
                                    <div class="dropdown">
                                        <!-- three dots -->
                                        <ul class="dropbtn icons btn-right showLeft">
                                            <li></li>
                                            <li></li>
                                            <li></li>
                                        </ul>

                                        <!-- menu -->
                                        <div class="dropdown-content">
                                            <a onclick="PreviewExam(@Model.Course.exam[i].Exam_Id,'Solved');">
                                                <i class="fa fa-eye"></i>
                                                View (Solved)
                                            </a>
                                            <a onclick="PreviewExam(@Model.Course.exam[i].Exam_Id,'UnSolved');">
                                                <i class="fa fa-eye"></i>
                                                View (UnSolved)
                                            </a>
                                            <a>
                                                <i class="fa fa-newspaper-o"></i>
                                                Modify
                                            </a>
                                            <a onclick="DeleteExam(@Model.Course.exam[i].Exam_Id.ToString(),'@Model.Course.exam[i].Exam_Name.ToString()',@Model.Course.Course_Id.ToString());">
                                                <i class="fa fa-trash-o"></i>
                                                Delete
                                            </a>
                                            <a onclick="AddExam(@Model.Course.Course_Id.ToString())">
                                                <i class="fa fa-plus"></i>
                                                Add New
                                            </a>

                                        </div>

                                    </div>
                                    <div class="card-header card-header-warning card-header-icon">
                                        <h3 style="margin-bottom:10px;">@Model.Course.exam[i].Exam_Name.ToString()</h3>
                                        <h2 class="card-title">
                                            Total Marks : @Model.Course.exam[i].Total_Marks.ToString()
                                            <br />
                                            Duration : @Math.Round(Model.Course.exam[i].Duration.TotalMinutes).ToString() min
                                        </h2>
                                    </div>
                                    <hr />
                                    <div class="card-footer">
                                        <div class="stats">
                                            <h7 class="Timings">
                                                <small>@String.Format("{0:ddd MMMM dd, yyyy}", @Model.Course.exam[i].Exam_Date)</small><br />
                                                <small>@String.Format("{0:hh:mm tt}", @Model.Course.exam[i].Start_Time) -  @String.Format("{0:hh:mm tt}", @Model.Course.exam[i].End_Time)</small>
                                            </h7>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>



            </div>

        </div>






            <div class="card card-success">
                <div class="card-header HeadingPanel">
                    <h3 class="card-title">Course Exams</h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i></button>
                    </div>

                </div>

                <div class="card-body">

                    <div class="row" id="Courses">

                        <table id="EnrolledStudents" class="display" style="width:100% !important;">
                            <thead>
                                <tr>
                                    <th>Delete</th>
                                    <th>Name</th>
                                    <th>Username</th>
                                    <th>DOB</th>
                                    <th>Gender</th>
                                    <th>Email Address</th>
                                    <th>Enrollement Date/Time</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Students != null)
                                {
                                    for (int i = 0; i < Model.Students.Count(); i++)
                                    {
                                        <tr>
                                            <td><img src="~/Images/reddustbingrid.png" style="width:28px; height:26px;" onclick="DeleteStudent('@Model.Students[i].Id.ToString()','@Model.Students[i].Fullname.ToString()',@Model.Course.Course_Id.ToString())" /></td>
                                            <td>@Model.Students[i].Fullname</td>
                                            <td>@Model.Students[i].Username</td>
                                            <td>@Model.Students[i].DOB.ToString("dd-MMM-yyyy")</td>
                                            <td>@Model.Students[i].Gender</td>
                                            <td>@Model.Students[i].Emailaddress</td>
                                            <td>@Model.Students[i].Enrollement_Date.ToString("dd-MMM-yy hh:mm tt")</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>





                 
                    </div>

                </div>

            </div>



        
  


    </div>
</div>
